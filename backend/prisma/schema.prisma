generator client {
  provider = "prisma-client-js"
  // output   = "../generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model order {
  id           String   @id
  customer     String
  goodsList    Json
  amount       Float?
  status       String
  shippingDate String?
  contractUrl  String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime
  contractFileList Json?
}

model customer {
  id        String   @id
  name      String
  contact   String?
  phone     String?
  address   String?
  email     String?
  status    String?
  createdAt DateTime @default(now())
  updatedAt DateTime
  registeredAt String?
  country   String?
  website   String?
  establishedAt String?
  contacts  Json?
}

model factory {
  id        String   @id
  name      String
  contact   String?
  phone     String?
  address   String?
  email     String?
  manager   String?
  status    String?
  createdAt DateTime @default(now())
  updatedAt DateTime
  goods     good[]   @relation("FactoryGoods") // 与产品的多对多关系
  mainCategories category[] @relation("FactoryMainCategories") // 主营类目多对多
}

model category {
  id        String   @id @default(uuid())
  name      String
  description String?
  createdAt DateTime @default(now())
  updatedAt DateTime
  factories factory[] @relation("FactoryMainCategories") // 工厂主营类目多对多
}

model good {
  id        String   @id
  name      String
  product_id String?
  tw_id     String?
  status    String   @default("on")
  code      String?
  price     Float
  priceCurrency String?
  factory_price Float?
  unit      String?
  spec_color String?
  spec      String?
  category  String?
  image     String?
  createdAt DateTime @default(now())
  updatedAt DateTime
  factories factory[] @relation("FactoryGoods") // 与工厂的多对多关系
}

model user {
  id        String   @id
  username  String   @unique
  password  String
  name      String?
  email     String?
  avatar    String?
  avatarFile String?
  role      String
  status    String   @default("active")
  createdAt DateTime @default(now())
  updatedAt DateTime
}

model route {
  id        String   @id @default(uuid())
  path      String
  name      String
  title     String
  icon      String?
  parentId  String?
  index     Int?
  show      Boolean? @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
